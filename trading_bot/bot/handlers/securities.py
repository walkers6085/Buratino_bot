import json
from datetime import datetime, timezone
from pathlib import Path
from typing import Optional

from aiogram import Router
from aiogram.types import Message

from ..api.moex import get_security_quote
from ..analytics import track


router = Router()

FUND_PATH = Path(__file__).resolve().parent.parent / "data" / "fundamental.json"


def _load_fundamental() -> dict:
    with open(FUND_PATH, "r", encoding="utf-8") as f:
        return json.load(f)


def _should_ask_moex_poll(last_shown_iso: Optional[str]) -> bool:
    if not last_shown_iso:
        return True
    try:
        last_dt = datetime.fromisoformat(last_shown_iso)
    except Exception:
        return True
    now = datetime.now(timezone.utc).astimezone()
    return now.date() > last_dt.date()


@router.message(lambda m: m.text and m.text.startswith("/") is False and len(m.text.strip()) <= 6)
async def handle_ticker(message: Message) -> None:
    ticker = message.text.strip().upper()

    await track(
        user_id=message.from_user.id,
        username=message.from_user.username,
        event_type="ticker_requested",
        payload={"ticker": ticker},
    )

    quote = await get_security_quote(ticker)
    if not quote:
        await message.answer("–¢–∏–∫–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, SBER.")
        return

    fund = _load_fundamental().get(ticker)
    fund_line = ""
    if fund:
        est = fund.get("fair_price_estimate")
        est_text = f" (~{est} ‚ÇΩ)" if est is not None else ""
        fund_line = f"\n–î–∏–≤. –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {fund.get('div_yield')}%. –û—Ü–µ–Ω–∫–∞: –∞–∫—Ü–∏—è –Ω–µ–¥–æ–æ—Ü–µ–Ω–µ–Ω–∞{est_text}."

    text = (
        f"{quote['name']} ({quote['secid']})\n"
        f"–¶–µ–Ω–∞: {quote['price']}\n"
        f"–ò–∑–º.: {quote['change_pct']}%\n"
        f"–û–±—ä—ë–º: {quote['volume']}"
        f"{fund_line}"
    )
    await message.answer(text)

    # –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ –∑–∞ –¥–µ–Ω—å –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ä–æ—Å –ø–æ MOEX
    # –ü—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç: –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å, –ø—Ä–æ–¥–∞–∫—à–Ω ‚Äî —Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–º–µ—Ç–∫—É –≤ –ë–î/–∫–µ—à–µ
    await track(
        user_id=message.from_user.id,
        username=message.from_user.username,
        event_type="moex_poll_shown",
        payload=None,
    )
    await message.answer("–ö—Å—Ç–∞—Ç–∏, –∫—É–¥–∞, –ø–æ-—Ç–≤–æ–µ–º—É, –ø–æ–π–¥—ë—Ç MOEX –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ?\n–í—ã–±–µ—Ä–∏—Ç–µ: üìà –†–æ—Å—Ç / üìâ –ü–∞–¥–µ–Ω–∏–µ / ‚û°Ô∏è –ë–æ–∫–æ–≤–∏–∫")

